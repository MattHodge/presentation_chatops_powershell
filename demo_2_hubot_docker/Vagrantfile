# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  config.vm.define "sshd" do |sshd|
    sshd.vm.box = "jptoto/Windows2012R2"
    sshd.vm.hostname = "win2012ssh"
    sshd.vm.network "private_network", ip: "172.28.128.200"
    sshd.vm.provider "virtualbox" do |vb|
      vb.memory = 2048
      vb.cpus = 2
    end
    sshd.vm.communicator = :winrm
    sshd.winrm.username = "vagrant"
    sshd.winrm.password = "vagrant"
    sshd.vm.provision "shell", path: "install_ssh.ps1"
    sshd.vm.provision :shell, inline: "
      $WUSettings = (New-Object -com 'Microsoft.Update.AutoUpdate').Settings
      $WUSettings.NotificationLevel = 1
      $WUSettings.save()

      Set-Item WSMan:\\localhost\\Client\\TrustedHosts * -Force
    "
    sshd.vm.provision "file", source: "./ssh_config/ssh_config", destination: "C:\\Program Files\\OpenSSH-Win64\\sshd_config"
    sshd.vm.provision "file", source: "./authorized_keys/authorized_keys", destination: "C:\\Users\\vagrant\\.ssh\\authorized_keys"
    sshd.vm.provision "file", source: "HubotServices.ps1", destination: "C:\\Scripts\\HubotServices.ps1"
  end

  config.vm.define "backend" do |backend|
    #endnode.vm.box = "mwrock/Windows2016"
    backend.vm.box = "jptoto/Windows2012R2"
    backend.vm.hostname = "backend"
    backend.vm.communicator = :winrm
    backend.winrm.username = "vagrant"
    backend.winrm.password = "vagrant"
    backend.vm.network "private_network", ip: "172.28.128.201"
    backend.vm.provider "virtualbox" do |vb|
      vb.memory = 2048
      vb.cpus = 2
    end
    backend.vm.provision :shell, inline: "
      $WUSettings = (New-Object -com 'Microsoft.Update.AutoUpdate').Settings
      $WUSettings.NotificationLevel = 1
      $WUSettings.save()

      Set-Item WSMan:\\localhost\\Client\\TrustedHosts * -Force
    "
  end
end
